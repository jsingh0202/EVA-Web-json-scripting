# Convert the JSON data to a df that only has leaf tasks.
# ------------------------------------------------------------------------------
json_data <- fromJSON("data/ProjectAnalysis.json")
df <- as.data.frame(json_data)
df <- df %>% filter(isLeaf == "True")
df_pcl <- df %>% filter(grepl("04-05-07-01-03", code))
# convert the data to a longer format to import to Google sheets
eva_pcl_longer <- df_pcl %>%
select(name, code, plannedCost, periods, actualCost,
actualCostPeriod, actualProgress) %>%
separate_longer_delim(c(periods, actualCost, actualCostPeriod,
actualProgress), delim = ",") %>%
mutate(across(c(periods, actualCost, actualCostPeriod, actualProgress),
~ as.numeric(as.character(.)))) %>%
filter(actualCostPeriod != 0) %>%
arrange(periods)
write.csv(eva_pcl_longer, "eva_pcl_longer.csv", row.names = FALSE)
write.csv(eva_sap_longer, "eva_sap_longer.csv", row.names = FALSE)
sap_codes <- read.delim("SAP Invoice Codes.txt")
df_sap <- df %>% filter(code %in% sap_codes$X04.03.11.01)
# convert the data to a longer format to import to Google sheets
eva_sap_longer <- df_sap %>%
select(name, code, plannedCost, periods, actualCostPeriod) %>%
separate_longer_delim(c(periods, actualCostPeriod), delim = ",") %>%
mutate(across(c(periods, actualCostPeriod),
~ as.numeric(as.character(.)))) %>%
filter(actualCostPeriod != 0) %>%
arrange(periods)
write.csv(eva_sap_longer, "eva_sap_longer.csv", row.names = FALSE)
df_pcl <- df %>% filter(grepl("04-05-07-01-03", code))
# convert the data to a longer format to import to Google sheets
eva_pcl_longer <- df_pcl %>%
select(name, code, plannedCost, periods, actualCost,
actualCostPeriod, actualProgress) %>%
separate_longer_delim(c(periods, actualCost, actualCostPeriod,
actualProgress), delim = ",") %>%
mutate(across(c(periods, actualCost, actualCostPeriod, actualProgress),
~ as.numeric(as.character(.)))) %>%
filter(actualCostPeriod != 0) %>%
arrange(periods)
write.csv(eva_pcl_longer, "eva_pcl_longer.csv", row.names = FALSE)
json_data <- fromJSON("data/ProjectAnalysis.json")
df <- as.data.frame(json_data)
df <- df %>% filter(isLeaf == "True")
# Take PCL Main Contract (04-05-07-01-03) and output as CSV.
# ------------------------------------------------------------------------------
df_pcl <- df %>% filter(grepl("04-05-07-01-03", code))
# convert the data to a longer format to import to Google sheets
eva_pcl_longer <- df_pcl %>%
select(name, code, plannedCost, periods, actualCost,
actualCostPeriod, actualProgress) %>%
separate_longer_delim(c(periods, actualCost, actualCostPeriod,
actualProgress), delim = ",") %>%
mutate(across(c(periods, actualCost, actualCostPeriod, actualProgress),
~ as.numeric(as.character(.)))) %>%
filter(actualCostPeriod != 0) %>%
arrange(periods)
write.csv(eva_pcl_longer, "eva_pcl_longer.csv", row.names = FALSE)
json_data <- fromJSON("data/ProjectAnalysis.json")
df <- as.data.frame(json_data)
df <- df %>% filter(isLeaf == "True")
# Take PCL Main Contract (04-05-07-01-03) and output as CSV.
# ------------------------------------------------------------------------------
df_pcl <- df %>% filter(grepl("04-05-07-01-03", code))
# convert the data to a longer format to import to Google sheets
eva_pcl_longer <- df_pcl %>%
select(name, code, plannedCost, periods, actualCost,
actualCostPeriod, actualProgress) %>%
separate_longer_delim(c(periods, actualCost, actualCostPeriod,
actualProgress), delim = ",") %>%
mutate(across(c(periods, actualCost, actualCostPeriod, actualProgress),
~ as.numeric(as.character(.)))) %>%
filter(actualCostPeriod != 0) %>%
arrange(periods)
write.csv(eva_pcl_longer, "eva_pcl_longer.csv", row.names = FALSE)
View(df_pcl)
View(eva_pcl_longer)
json_data <- fromJSON("data/ProjectAnalysis.json")
df <- as.data.frame(json_data)
df <- df %>% filter(isLeaf == "True")
# Take PCL Main Contract (04-05-07-01-03) and output as CSV.
# ------------------------------------------------------------------------------
df_pcl <- df %>% filter(grepl("04-05-07-01-03", code))
# convert the data to a longer format to import to Google sheets
eva_pcl_longer <- df_pcl %>%
select(name, code, plannedCost, periods, actualCost,
actualCostPeriod, actualProgress) %>%
separate_longer_delim(c(periods, actualCost, actualCostPeriod,
actualProgress), delim = ",") %>%
mutate(across(c(periods, actualCost, actualCostPeriod, actualProgress),
~ as.numeric(as.character(.)))) %>%
filter(actualCostPeriod != 0) %>%
arrange(periods)
write.csv(eva_pcl_longer, "eva_pcl_longer.csv", row.names = FALSE)
library(tidyverse)
library(jsonlite)
# Convert the JSON data to a df that only has leaf tasks.
# ------------------------------------------------------------------------------
json_data <- fromJSON("data/ProjectAnalysis.json")
df <- as.data.frame(json_data)
df <- df %>% filter(isLeaf == "True")
# Take PCL Main Contract (04-05-07-01-03) and output as CSV.
# ------------------------------------------------------------------------------
df_pcl <- df %>% filter(grepl("04-05-07-01-03", code))
View(df_pcl)
# export only current eva codes
codes <- df_pcl$code
# export only current eva codes
codes <- df_pcl[code]
write.csv(codes, "eva_codes.csv", row.names = FALSE)
library(tidyverse)
library(jsonlite)
json_data <- fromJSON("data/ProjectAnalysis.json")
df <- as.data.frame(json_data)
View(json_data)
View(df)
root <- df %>%
filter(title == "CP-008169-01 15-5785Lewis Farms CRC Library/DP Design")
View(root)
root_longer <- root %>%
select(title, code, periods, actualCostPeriod, actualCost) %>%
separate_longer_delim(c(periods, actualCostPeriod, actualCost),
delim = ",") %>%
mutate(
across(c(periods, actualCostPeriod, actualCost),
~ as.numeric(as.character(.)))) %>%
filter(actualCostPeriod != 0) %>%
arrange(periods)
View(root_longer)
calcCostRoot <- sum(root_longer$actualCostPeriod)
df2 <- df %>% filter(title %in% filterList)
filterList <- c("01 CONCEPT",
"02 DEVELOPMENT DESIGN",
"03 DETAILED DESIGN",
"04 BUILD",
"05 POST BUILD",
"06 NON-PHASE DEPENDENT",
"99 UNALLOCATED")
df2 <- df %>% filter(title %in% filterList)
View(df2)
df2 <- df %>%
filter(title %in% filterList) %>%
select(title, code, periods, actualCostPeriod, actualCost)
df2 <- df %>%
filter(title %in% filterList) %>%
select(title, code, periods, actualCostPeriod, actualCost) %>%
separate_longer_delim(c(periods, actualCostPeriod, actualCost),
delim = ",")
to_longer <- function(df_in, filterList, longerList){
df_out <- df_in %>%
select(filterList) %>%
separate_longer_delim(longerList,
delim = ",") %>%
mutate(
across(longerList, ~ as.numeric(as.character(.)))) %>%
# filter(actualCostPeriod != 0) %>%
arrange(periods)
return(df_out)
}
root_longer <- to_longer(root,
c(title, code, periods, actualCostPeriod, actualCost),
c(periods, actualCostPeriod, actualCost))
root_longer <- to_longer(root,
c("title", "code", "periods", "actualCostPeriod", "actualCost"),
c("periods", "actualCostPeriod", "actualCost"))
col_list <- c("title", "code", "periods", "actualCostPeriod", "actualCost")
longer_list <-c("periods", "actualCostPeriod", "actualCost")
(root, col_list, longer_list)
root <- df %>%
filter(title == "CP-008169-01 15-5785Lewis Farms CRC Library/DP Design")
col_list <- c("title", "code", "periods", "actualCostPeriod", "actualCost")
longer_list <- c("periods", "actualCostPeriod", "actualCost")
root_longer <- to_longer(root, col_list, longer_list)
calcCostRoot <- sum(root_longer$actualCostPeriod)
concept <- df %>% filter(code == "01")
View(concept)
concept_longer <- df %>% filter(code == "01")
concept_longer <- df %>%
filter(code == "01") %>%
to_longer(col_list, longer_list)
to_longer <- function(df_in, col_list, longer_list){
df_out <- df_in %>%
select(col_list) %>%
separate_longer_delim(longer_list, delim = ",") %>%
mutate(across(longerList, ~ as.numeric(as.character(.)))) %>%
filter(actualCostPeriod != 0) %>%
arrange(periods)
return(df_out)
}
concept_longer <- df %>%
filter(code == "01") %>%
to_longer(col_list, longer_list)
View(concept_longer)
to_longer <- function(df_in, col_list, longer_list){
df_out <- df_in %>%
select(all_of(col_list)) %>%
separate_longer_delim(longer_list, delim = ",") %>%
mutate(across(longerList, ~ as.numeric(as.character(.)))) %>%
filter(actualCostPeriod != 0) %>%
arrange(periods)
return(df_out)
}
concept_longer <- df %>%
filter(code == "01") %>%
to_longer(col_list, longer_list)
source("C:/Users/Jaskirat/Downloads/Scripts/EVA-Web-json-scripting/evajson.r", echo=TRUE)
concept <- df %>% filter(code == "01")
concept <- df %>% filter(code == "01")
bind_rows(lapply(concept$actualCost, bind_rows))
temp <- bind_rows(lapply(concept$actualCost, bind_rows))
?bind_rows()
temp <- bind_cols(lapply(concept$actualCost, bind_rows))
?lapply
temp <- bind_cols(lapply(concept, bind_cols))
View(temp)
temp <- bind_rows(lapply(concept, bind_rows))
temp <- bind_rows(lapply(concept, bind_rows))
temp <- lapply(concept, bind_rows)
concept <- df %>%
filter(code == "01") %>%
select(all_of(col_list))
concept <- df %>%
filter(code == "01")
concept <- df %>%
filter(code == "01") %>%
select(all_of(col_list))
concept <- df %>%
filter(code == "01") %>%
select(col_list)
concept <- df %>%
filter(code == "01")
View(df)
View(df)
concept <- df %>%
filter(code == "01") %>%
select(col_list)
concept <- df %>%
filter(code == 01) %>%
select(col_l
concept <- df %>%
concept <- df %>%
filter(code == "01")
json_data <- fromJSON("data/ProjectAnalysis.json")
df <- as.data.frame(json_data)
concept <- df %>%
filter(code == "01")
concept <- df %>%
filter(code == "01") %>%
select(col_list)
temp <- bind_rows(lapply(concept, bind_rows))
temp <- bind_cols(lapply(concept, bind_cols))
View(temp)
?bind_cols
temp <- bind_cols(concept$periods, concept$actualCostPeriod, concept$actualCost)
temp <- bind_rows(concept$periods, concept$actualCostPeriod, concept$actualCost)
?bind_rows
temp <- concept <- select("periods", "actualCostPeriod", "actualCost")
temp <- concept %>%  select("periods", "actualCostPeriod", "actualCost")
temp <- concept %>%
select("periods", "actualCostPeriod", "actualCost") %>%
lapply(separate_longer_delim(c("periods", "actualCostPeriod", "actualCost"), \
delim = ","))
temp <- concept %>%
select("periods", "actualCostPeriod", "actualCost") %>%
lapply(separate_longer_delim(c("periods", "actualCostPeriod", "actualCost"),
delim = ","))
temp <- concept %>%
select("periods", "actualCostPeriod", "actualCost") %>%
lapply(separate_rows(c("periods", "actualCostPeriod", "actualCost"),
sep = ","))
?split
temp <- concept$periods %>% split(sep=",")
temp <- concept$periods %>% strsplit(",")
View(temp)
View(temp)
temp <- concept$periods
temp <- concept$periods %>% strsplit(",")
View(temp)
temp <- as.data.frame($periods %>% strsplit(","))
temp <- as.data.frame(concept$periods %>% strsplit(","))
concept <- concept %>% select(periods, actualCost, actualCostPeriod)
temp1 <- sapply(concept, strsplit(","))
temp1 <- sapply(concept, strsplit(,","))
temp1 <- lapply(concept, strsplit(","))
temp1 <- sapply(concept, strsplit(split = ","))
temp1 <- sapply(concept, strsplit
temp1 <- sapply(concept, strsplit)
temp1 <- sapply(concept, strsplit)
temp <- bind_cols(as.data.frame(concept$periods %>% strsplit(",")),
as.data.frame(concept$actualCost %>% strsplit(",")),
as.data.frame(concept$actualCostPeriod %>% strsplit(",")))
temp <- cbind(as.data.frame(concept$periods %>% strsplit(",")),
as.data.frame(concept$actualCost %>% strsplit(",")),
as.data.frame(concept$actualCostPeriod %>% strsplit(",")))
?cbind
temp <- rbind(as.data.frame(concept$periods %>% strsplit(",")),
as.data.frame(concept$actualCost %>% strsplit(",")),
as.data.frame(concept$actualCostPeriod %>% strsplit(",")))
rstudioapi::addTheme('https://raw.githubusercontent.com/johnnybarrels/rstudio-one-dark-pro-theme/master/OneDarkPro.rstheme', apply=TRUE, force=TRUE)
concept <- df %>%
filter(code == "01") %>%
select(col_list)
concept1 <- concept %>% select(code, period)
concept1 <- concept %>% select(code, periods)
View(concept_longer)
View(concept)
View(concept1)
concept1 <- concept %>%
select(code, periods) %>%
separate_longer_delim(periods, delim = ",")
concept1$actualCost <- concept %>%
select(actualCost) %>%
separate_longer_delim(periods, delim = ",")
concept1$actualCost <- concept %>%
select(actualCost) %>%
separate_longer_delim(actualCost, delim = ",")
concept1 <- concept %>%
select(code, actualCost) %>%
separate_longer_delim(actualCost, delim = ",")
concept1$periods <- concept %>%
select(periods) %>%
separate_longer_delim(periods, delim = ",")
concept_longer <- df %>%
filter(code == "01") %>%
to_longer(col_list, longer_list)
col_list <- c("title",
"code",
# "periods",
"actualCostPeriod", "
actualCost")
longer_list <- c("actualCostPeriod",
# "periods",
"actualCost")
concept_longer <- df %>%
filter(code == "01") %>%
to_longer(col_list, longer_list)
json_data <- fromJSON("data/ProjectAnalysis.json")
df <- as.data.frame(json_data)
concept_longer <- df %>%
filter(code == "01") %>%
to_longer(col_list, longer_list)
View(concept)
concept_longer <- concept %>%
to_longer(col_list, longer_list)
concept_longer <- to_longer(concept, col_list, longer_list)
col_list <- c("title",
"code",
# "periods",
"actualCostPeriod",
"actualCost")
longer_list <- c("actualCostPeriod",
# "periods",
"actualCost")
concept_longer <- to_longer(concept, col_list, longer_list)
to_longer <- function(df_in, col_list, longer_list){
df_out <- df_in %>%
select(col_list) %>%
# filter(actualCostPeriod != 0) %>%
separate_longer_delim(longer_list, delim = ",") %>%
mutate(across(longer_list, ~ as.numeric(as.character(.)))) %>%
arrange(periods)
return(df_out)
}
concept_longer <- to_longer(concept, col_list, longer_list)
# ------------------------------------------------------------------------------
to_longer <- function(df_in, col_list, longer_list){
df_out <- df_in %>%
select(col_list) %>%
# filter(actualCostPeriod != 0) %>%
separate_longer_delim(longer_list, delim = ",") %>%
mutate(across(longer_list, ~ as.numeric(as.character(.))))
# %>%
#   arrange(periods)
return(df_out)
}
concept_longer <- to_longer(concept, col_list, longer_list)
View(concept_longer)
concept_longer <- to_longer(df %>% filter(code == "01"),
col_list,
longer_list)
calcCostConcept <- sum(concept_longer$actualCostPeriod)
calcCostConcept - last(conceptLonger$actualCost)
calcCostConcept - last(concept_longer$actualCost)
concept_longer <- to_longer(df %>% filter(code == "01"),
col_list,
longer_list)
dev_design_longer <- to_longer(df %>% filter(code == "02"),
col_list,
longer_list)
det_design_longer <- to_longer(df %>% filter(code == "03"),
col_list,
longer_list)
build_longer <- to_longer(df %>% filter(code == "04"),
col_list,
longer_list)
post_build <- to_longer(df %>% filter(code == "05"),
col_list,
longer_list)
non_phase_dev <- to_longer(df %>% filter(code == "06"),
col_list,
longer_list)
unallocated <- to_longer(df %>% filter(code == "99"),
col_list,
longer_list)
View(unallocated)
concept_longer <- to_longer(df %>% filter(code == "01"),
col_list,
longer_list)
write.csv(concept_longer, "concept_longer.csv", row.names = FALSE)
dev_design_longer <- to_longer(df %>% filter(code == "02"),
col_list,
longer_list)
write.csv(dev_design_longer, "dev_design_longer.csv", row.names = FALSE)
det_design_longer <- to_longer(df %>% filter(code == "03"),
col_list,
longer_list)
write.csv(det_design_longer, "det_design_longer.csv", row.names = FALSE)
build_longer <- to_longer(df %>% filter(code == "04"),
col_list,
longer_list)
write.csv(build_longer, "build_longer.csv", row.names = FALSE)
post_build <- to_longer(df %>% filter(code == "05"),
col_list,
longer_list)
write.csv(post_build, "post_build.csv", row.names = FALSE)
non_phase_dev <- to_longer(df %>% filter(code == "06"),
col_list,
longer_list)
write.csv(non_phase_dev, "non_phase_dev.csv", row.names = FALSE)
unallocated <- to_longer(df %>% filter(code == "99"),
col_list,
longer_list)
write.csv(non_phase_dev, "non_phase_dev.csv", row.names = FALSE)
write.csv(unallocated, "unallocated.csv", row.names = FALSE)
dev_design_longer <- to_longer(df %>% filter(code == "02"),
col_list,
longer_list)
write.csv(dev_design_longer, "dev_design_longer.csv", row.names = FALSE)
det_design_longer <- to_longer(df %>% filter(code == "03"),
col_list,
longer_list)
write.csv(det_design_longer, "det_design_longer.csv", row.names = FALSE)
build_longer <- to_longer(df %>% filter(code == "04"),
col_list,
longer_list)
write.csv(build_longer, "build_longer.csv", row.names = FALSE)
post_build <- to_longer(df %>% filter(code == "05"),
col_list,
longer_list)
write.csv(post_build, "post_build.csv", row.names = FALSE)
non_phase_dev <- to_longer(df %>% filter(code == "06"),
col_list,
longer_list)
write.csv(non_phase_dev, "non_phase_dev.csv", row.names = FALSE)
unallocated <- to_longer(df %>% filter(code == "99"),
col_list,
longer_list)
write.csv(unallocated, "unallocated.csv", row.names = FALSE)
json_data <- fromJSON("data/ProjectAnalysis.json")
library(tidyverse)
library(jsonlite)
json_data <- fromJSON("data/ProjectAnalysis.json")
df <- as.data.frame(json_data)
col_list <- c("title",
"code",
# "periods",
"actualCostPeriod",
"actualCost")
longer_list <- c("actualCostPeriod",
# "periods",
"actualCost")
concept_longer <- to_longer(df %>% filter(code == "01"),
col_list,
longer_list)
to_longer <- function(df_in, col_list, longer_list){
df_out <- df_in %>%
select(col_list) %>%
# filter(actualCostPeriod != 0) %>%
separate_longer_delim(longer_list, delim = ",") %>%
mutate(across(longer_list, ~ as.numeric(as.character(.))))
# %>%
#   arrange(periods)
return(df_out)
}
concept_longer <- to_longer(df %>% filter(code == "01"),
col_list,
longer_list)
write.csv(concept_longer, "concept_longer.csv", row.names = FALSE)
dev_design_longer <- to_longer(df %>% filter(code == "02"),
col_list,
longer_list)
write.csv(dev_design_longer, "dev_design_longer.csv", row.names = FALSE)
det_design_longer <- to_longer(df %>% filter(code == "03"),
col_list,
longer_list)
write.csv(det_design_longer, "det_design_longer.csv", row.names = FALSE)
build_longer <- to_longer(df %>% filter(code == "04"),
col_list,
longer_list)
write.csv(build_longer, "build_longer.csv", row.names = FALSE)
post_build <- to_longer(df %>% filter(code == "05"),
col_list,
longer_list)
write.csv(post_build, "post_build.csv", row.names = FALSE)
non_phase_dev <- to_longer(df %>% filter(code == "06"),
col_list,
longer_list)
write.csv(non_phase_dev, "non_phase_dev.csv", row.names = FALSE)
unallocated <- to_longer(df %>% filter(code == "99"),
col_list,
longer_list)
write.csv(unallocated, "unallocated.csv", row.names = FALSE)
